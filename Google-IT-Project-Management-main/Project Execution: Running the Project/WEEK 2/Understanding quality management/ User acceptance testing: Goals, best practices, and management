User acceptance testing: Goals, best practices, and management



In the previous video, you learned about different ways to measure customer satisfaction, including feedback surveys and user acceptance testing (UAT). This
reading will focus on why conducting UAT is essential to the successful launch of any product, service, or software. We will also discuss some best practices 
for effective UAT and how to manage the feedback you receive. 


The goals of UAT
To recap, UAT is testing that helps a business make sure that a product, service, or process works for its users. The main objectives of UAT are to:

1. Demonstrate that the product, service, or process is behaving in expected ways in real-world scenarios. 

2. Show that the product, service, or process is working  as intended.

3. Identify issues that need to be addressed before considering the project as done.



UAT simulates real-world conditions, so when the feature works as intended during the testing process, you can be more confident that your product, service, or
process will work properly once it is launched. It allows a project team to gather detailed information about how users interact with a product, service, or
process. UAT helps the team answer such questions as: Do users recognize its purpose and uses? How do they interact with it? How much time do users take to 
interact with it? Do they notice all of its features? Is the product, service, or process accessible to everyone? UAT also allows the project team to record 
information about how users feel about their experience with a product, service, or process. Through testing, the team can learn about the emotions it evokes,
identities it conveys, appeal it holds, and so on.


Best practices for effective UAT
In order to achieve these goals, UAT needs to be conducted thoughtfully. These best practices can help you administer effective UAT: 

1. Define and write down your acceptance criteria. 
Acceptance criteria are pre-established standards or requirements that a product, service, or process must meet. Write down these requirements for each item 
that you intend to test. For example, if your project is to create a new employee handbook for your small business, you may set acceptance criteria that the
handbook must be a digital PDF that is accessible on mobile devices and desktop.

2. Create the test cases for each item that you are testing. 
A test case is a sequence of steps and its expected results. It usually consists of a series of actions that the user can perform to find out if the product, 
service, or process behaved the way it was supposed to. Continuing with the employee handbook example, you could create a test case process in which the user 
would click to download the PDF of the handbook on their mobile device or desktop to ensure that they could access it without issues.

3. Select your users carefully. 
It is important to choose users who will actually be the end users of the product, service, or process. 

4. Write the UAT scripts based on user stories. 
These scripts will be delivered to the users during the testing process. A user story is an informal, general explanation of a feature written from the 
perspective of the end user. In our employee handbook example, a user story might be: As a new employee, I want to be able to use the handbook to easily locate
the vacation policy and share it with my team via email. 

5. Communicate with users and let them know what to expect. 
If you can prepare users ahead of time, there will be fewer questions, issues, or delays during the testing process.

6. Prepare the testing environment for UAT. 
Ensure that the users have proper credentials and access, and try out these credentials ahead of time to ensure they work. 

7. Provide a step-by-step plan to help guide users through the testing process. 
It will be helpful for users to have some clear, easy-to-follow instructions that will help focus their attention on the right places. You can create this plan 
in a digital document or spreadsheet and share with them ahead of time. 

8. Compile notes in a single document and record any issues that are discovered. 
You can create a digital spreadsheet or document that corresponds to your plan. It can have designated areas to track issues for each item that is tested, 
including the usersâ€™ opinions on the severity of each issue. This will help you prioritize fixes. 




Managing UAT feedback
Users provide feedback after performing UAT. This feedback might include positive comments, bug reports, and change requests. As the project manager, you can
address the different types of feedback as follows:

1. Bugs or issues: Users might report technical issues, also known as bugs, or other types of issues after performing UAT. You can track and monitor these issues in
a spreadsheet or equivalent system and prioritize which issues to fix. For instance, critical issues, such as not being able to access, download, or search the
employee handbook, need to be prioritized over non-critical issues, such as feedback on the cover art of the handbook. 

2. Change requests: Sometimes the user might suggest minor changes to the product, service, or process after UAT. These types of requests or changes should also be
managed and prioritized. Depending on the type and volume of the requests, you may want to share this data with your primary stakeholders, and you may also need
to adjust your project timeline to implement these new requests. 




Key takeaway
User acceptance testing is a powerful tool to ensure that your project outcome is desirable and successful. Be sure to leave time in the schedule for proper
testing and issue resolution. 
